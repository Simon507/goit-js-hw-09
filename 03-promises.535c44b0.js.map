{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAcxC,SAASI,GAAcC,SAAEA,EAAQC,MAAEA,IACjC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,IAIRQ,MAAKC,IACJnB,EAAAoB,OAAOC,QAAQF,EAAM,IAEtBG,OAAMC,IACLvB,EAAAoB,OAAOI,QAAQD,EAAM,G,CA9B3BrB,EAAKuB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIjB,EAAQkB,OAAOvB,EAAQc,OAC3B,IAAK,IAAIU,EAAI,EAAGA,GAAKtB,EAASY,MAAOU,IAAK,CAExCrB,EAAc,C,SADGqB,E,MACSnB,IAC1BA,GAAgBkB,OAAOtB,EAAOa,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', startPromise);\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n  let delay = Number(delayEl.value);\n  for (let i = 1; i <= amountEl.value; i++) {\n    const position = i;\n    createPromise({ position, delay });\n    delay = delay + Number(stepEl.value);\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(value => {\n      Notify.success(value);\n    })\n    .catch(error => {\n      Notify.failure(error);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","value","Notify","success","catch","error","failure","addEventListener","evt","preventDefault","Number","i"],"version":3,"file":"03-promises.535c44b0.js.map"}