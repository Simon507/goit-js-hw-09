{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAgBxC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFX,EAAAe,OAAOC,QAAQ,aAAsBC,OAATR,EAAS,WAIrCT,EAAAe,OAAOG,QAAQ,aAAsBD,OAATR,EAAS,a,GAGtCC,E,CA3BLR,EAAKiB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IADA,IAAIX,EAAQY,OAAOjB,EAAQkB,OAClBC,EAAI,EAAGA,GAAKjB,EAASgB,MAAOC,IAAK,CAIxChB,EAHiBgB,EAGOd,GACxBA,GAAgBY,OAAOhB,EAAOiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', startPromise);\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n  let delay = Number(delayEl.value);\n  for (let i = 1; i <= amountEl.value; i++) {\n    const position = i;\n    // console.log(position);\n    // console.log(delay);\n    createPromise(position, delay);\n    delay = delay + Number(stepEl.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    if (shouldResolve) {\n      // Fulfill\n      Notify.success(`Promise # ${position} is OK`);\n      // console.log(position);\n      // console.log(delay);\n    } else {\n      Notify.failure(`Promise # ${position} is'nt OK`);\n      // Reject\n    }\n  }, delay);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","setTimeout","Notify","success","concat","failure","addEventListener","evt","preventDefault","Number","value","i"],"version":3,"file":"03-promises.6cb92fd9.js.map"}